server {
    # Escuta na porta 80
    listen 80;
    server_name boilerplate.ai;
    root   /usr/share/nginx/html;
    index index.html;

    # Headers de segurança
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:;";
    add_header Referrer-Policy "no-referrer";
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";

    # Compressão
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml application/json application/font-woff application/font-woff2 image/svg+xml;


    # Configuração de roteamento para Angular
    location / {
        try_files $uri $uri/ /index.html;

        # Controle de cache
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # Serve dynamically generated env.js with environment variables
    location /assets/env.js {
        default_type application/javascript;
        return 200 "window.env = {
            NODE_ENV: '',
            API_URL: ''
        };";
    }


    # Configuração de cache de longo prazo para assets estáticos
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|otf)$ {
        expires 6M;
        access_log off;
        add_header Cache-Control "public, max-age=15552000, immutable";
    }

    # Logs
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;

    # Remover informações de versão do NGINX
    server_tokens off;
}
